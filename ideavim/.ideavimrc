""" Map leader to space ---------------------
let mapleader=" "

""" Plugins  --------------------------------
set surround
set multiple-cursors
set commentary
set argtextobj
set exchange
set textobj-entire
set ReplaceWithRegister
set highlightedyank
set NERDTree

""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>,{:}"

""" Common settings -------------------------
set showmode
set scrolloff=5
set relativenumber
set number
set ignorecase
set smartcase

""" Idea specific settings ------------------
set ideajoin
set idearefactormode=select

""" Mappings --------------------------------
""map <leader>f <Plug>(easymotion-s)
""map <leader>e <Plug>(easymotion-f)

nmap <leader>t <Action>(RunClass)
nmap <leader>T <Action>(RerunFailedTests)

""map <leader>d Action (Debug)
nmap <leader>d <Action>(DebugClass)
nmap <leader>r <Action>(RenameElement)
nmap <leader>c <Action>(Stop)
nmap <leader>z <Action>(ToggleDistractionFreeMode)

nmap <leader>s <Action>(SelectInProjectView)
nmap <leader>a <Action>(Annotate)
nmap <leader>h <Action>(Vcs.ShowTabbedFileHistory)
nmap <S-Space> <Action>(GotoNextError)

nmap <leader>b <Action>(ToggleLineBreakpoint)
nmap <leader>o <Action>(FileStructurePopup)

""" JetBeans actions ------------------------
nmap [c <Action>(VcsShowPrevChangeMarker)
nmap ]c <Action>(VcsShowNextChangeMarker)
nmap [d <Action>(GotoImplementation)
nmap ]d <Action>(GotoSuperMethod)

vmap [v <Action>(EditorUnSelectWord)
vmap ]v <Action>(EditorSelectWord)

"  Fix for Idea jumps not populating vim jumplist
nmap <C-o> <Action>(Back)
"nmap <C-i> <Action>(Forward)

nmap <leader>fa <Action>(GotoAction)
nmap <leader>fe <Action>(SearchEverywhere)
nmap <leader>fc <Action>(GotoClass)
nmap <leader>ff <Action>(GotoFile)
nmap <leader>fg <Action>(FindInPath)

""" Personal bindings -----------------------
"   Add some movement to insertmode
imap <M-k> <Up>
imap <M-j> <Down>
imap <M-l> <Right>
imap <M-h> <Left>

"   Jetpack bind, a bit buggy here though
" nmap <leader>l :ls <CR> :b <space>
nmap <leader>p "0p
nmap <leader>P "+p
"   CamelCase to snake_case
nmap <leader>u :s/\(\u\)/_\l\1/g<cr>
"   snake_case to CamelCase
nmap <leader>U :s/_\(\l\)/\u\1/g<cr>

""" unimpared -------------------------------
nmap [<space> <Action>(EditorStartNewLineBefore)
nmap ]<space> <Action>(EditorStartNewLine)
nmap [e <Action>(MoveLineUp)
nmap ]e <Action>(MoveLineDown)
nmap [b <Action>(PreviousTab)
nmap ]b <Action>(NextTab)
nmap [B <Action>(GoToTab1)
nmap ]B <Action>(GoToLastTab)
